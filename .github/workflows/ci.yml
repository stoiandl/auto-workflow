name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.3'

      - name: Configure Poetry virtualenv
        run: |
          poetry config virtualenvs.create true
          poetry config installer.parallel true

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies (poetry)
        run: |
          poetry install --with dev --no-interaction --no-ansi

      - name: Lint (ruff)
        run: |
          poetry run ruff check .
          poetry run ruff format --check .

      - name: Run unit tests with coverage (fail under 90%)
        run: |
          rm -f .coverage .coverage.* coverage.xml || true
          poetry run pytest -q --cov=auto_workflow --cov-branch --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true

      - name: Run pre-commit (all files)
        run: |
          poetry run pre-commit run --all-files
